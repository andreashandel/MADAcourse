---
title: Project collaboration and tracking
subtitle: ""
---

# Overview

For this unit, we will discuss ways to make sure working collaboratively on a project is efficient and that project progress is tracked.


# Learning Objectives

- 

# Introduction



# Git/GitHub

Git/GitHub is a very common method of working collaboratively on projects. 
A prior unit provides [a brief introduction to Git/GitHub](/content/module-intro-tools/tools-github-introduction.qmd). 

The following only mentions (again) some topics worth keeping in mind when using Git/GitHub for data analysis work.



## File sizes

GitHub has a problem with large files. Anything above around 100MB can lead to very slow syncing and sometimes outright failure. Unfortunately, once you have a failed attempt to sync a large file, it can be quite tricky to fix the repository to work again. Therefore **keep large (\>100MB) files out of your GitHub repositories.** If you have to work with such files, try to reduce them first before placing into the GitHub repository. As alternative, place those files in another sync service (e.g. Dropbox, OneDrive, GoogleDrive) and load them from there.

There is an option to have larger files with GitHub using Git Large File Storage. This can be a bit tricky, if you think it's worth trying, see [the documentation here](https://docs.github.com/en/repositories/working-with-files/managing-large-files).


## Confidentiality

By default, GitHub repositories are public. Since you might not want to share your analysis publicly, sometimes using a private repository is useful. I think you generally don't need to worry about getting scooped. Everyone is so busy with their own stuff, nobody really cares what you are working on üòÅ. However, you might often have data or other information as part of your project that you don't want to share publicly. 

Therefore, for most data analysis projects, it is probably good practice to start with a private repository, so you can have potentially confidential information in the repo. You can add collaborators to the private repository. This way only those individuals who you want to give access will be able to see, and potentially contribute to the project.

Eventually, to ensure your project is publicly reproducible, you want to share some version of the data and the code. Be aware that if you make a repository public, others can also see the full history. This can be important if you want to make your final results public - after you made sure everything is anonymous enough for sharing. If at any time you worked in the repository with the full dataset and tracked it, others can go back in your GitHub/Git history and see it. The best option is likely to start a new public repository and copy only the elements you want to share into that repository, while keeping your original repository private.


# SVN




# Summary


# Further Resources